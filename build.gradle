/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id "com.github.spotbugs" version "4.0.5"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "de.undercouch.download" version "4.0.4"
    id "net.researchgate.release" version "2.8.0"
}

ext.ballerinaLangVersion = project.ballerinaLangVersion
ext.stdlibTaskVersion = project.stdlibTaskVersion
ext.stdlibLogVersion = project.stdlibLogVersion
ext.stdlibIoVersion = project.stdlibIoVersion
ext.puppycrawlCheckstyleVersion = "8.18"
ext.testngVersion = "6.14.3"
ext.slf4jVersion = "1.7.30"
ext.javaFtpVersion = "1.6.2"
ext.fileTransportVersion = "6.0.57"
ext.commonsVfsVersion="2.6.0"
ext.commonsNetVersion="3.6"
ext.jschVersion= "0.1.54"
ext.mockFtpServerVersion= "2.7.1"

allprojects {
    group = 'org.ballerinalang'
    version = project.version

    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.wso2.org/nexus/content/repositories/releases/'
        }

        maven {
            url = 'https://maven.wso2.org/nexus/content/groups/wso2-public/'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/ballerina-lang'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-ftp'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-task'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-log'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-io'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/module-ballerina-time'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }

    ext {
        snapshotVersion= '-SNAPSHOT'
        timestampedVersionRegex = '.*-\\d{8}-\\d{6}-\\w.*\$'
    }
}

subprojects {

    configurations {
        ballerinaStdLibs
    }
    dependencies {
        /* Standard libraries */
        ballerinaStdLibs "org.ballerinalang:log-ballerina:${stdlibLogVersion}"
        ballerinaStdLibs "org.ballerinalang:io-ballerina:${stdlibIoVersion}"
        ballerinaStdLibs "org.ballerinalang:task-ballerina:${stdlibTaskVersion}"
        ballerinaStdLibs "org.wso2.transport.file:org.wso2.transport.remote-file-system:${fileTransportVersion}"
        ballerinaStdLibs "org.mockftpserver:MockFtpServer:${mockFtpServerVersion}"
        ballerinaStdLibs "org.slf4j:slf4j-api:${slf4jVersion}"
        ballerinaStdLibs "org.testng:testng:${testngVersion}"
        ballerinaStdLibs "org.apache.commons:commons-vfs2:${commonsVfsVersion}"
        ballerinaStdLibs "org.ballerinalang:time-ballerina:${stdlibTimeVersion}"
    }
}

def moduleVersion = project.version.replace("-SNAPSHOT", "")

release {

    buildTasks = []
    failOnSnapshotDependencies = true
    versionPropertyFile = 'gradle.properties'
    tagTemplate = 'v${version}'

    git {
        requireBranch = "release-${moduleVersion}"
        pushToRemote = 'origin'
    }
}

task build {
    dependsOn('ftp-ballerina:build')
}
